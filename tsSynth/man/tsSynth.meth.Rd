% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsSynth.method.R
\name{tsSynth.meth}
\alias{tsSynth.meth}
\title{Implement appropriate synthetic control method to estimate the average treatment effect.}
\usage{
tsSynth.meth(
  tsSynth.prep.obj = NULL,
  meth = "ordinary",
  Y1 = NULL,
  X1 = NULL,
  Y2 = NULL,
  X2 = NULL,
  time.variable = NULL,
  time.prior = NULL,
  time.post = NULL
)
}
\arguments{
\item{meth}{A character string indicating the type of applied method. Possible values are "SC" (the default, original SC method), "MSCa" (MSC method with weights sum to one), "MSCb" (MSC method with zero intercept) and "MSC" (MSC method with non-negativity).}

\item{Y1}{A matrix of treatment unit data for pre-treatment periods.}

\item{X1}{A matrix of control units data for pre-treatment periods.}

\item{Y2}{A matrix of treatment unit data for post-treatment periods.}

\item{X2}{A matrix of control units data for post-treatment periods.}

\item{time.variable}{A scalar identifying column number or column-name character string associated with period (time) data.}

\item{time.prior}{A numeric vector identifying the row numbers corresponding to pre-treatment periods.}

\item{time.post}{A numeric vector identifying the row numbers corresponding to post-treatment periods.}

\item{synth.prep.object}{The object that comes from running \code{tsSynth.prep}. This objects contains all information about four necessary matrices. Therefore, once users import this object, there is no need to specify any of four matrices manually.}
}
\value{
A list that contains the weights on control units and other components.
\item{b_SC}{A vector of weights across the controls.}
\item{ATT_SC}{The value of estimated average treatment effect on treated unit.}
\item{sigma_SC}{MSPE from optimization over weights on control units.}
\item{sigma2_v}{The variance of estimated average treatment effect.}
\item{r2_SC}{The value of R-squared.}
\item{r2_bar_SC}{The value of adjusted R-squared.}
\item{dataset}{A list that contains a series of matrices and scalars for future use.}
}
\description{
This function can routinely search for the set of weights that generate the best fitting combination of the control units chosen to approximate counterfactual outcomes of treatment unit and thus estimate ATT with long panels under general conditions. This function require the users to input four matrices as its main arguments. they are named Y1, X1, Y2, and X2 accordingly. Y1 and Y2 contain values of the treatment unit over the pre-intervention and post-intervention periods respectively. X1 and X2 contain the the values for the control units over the pre-intervention and post-intervention periods respectively.
}
\details{
Creating relevant matrices to be loaded into \code{tsSynth.meth} can be tedious. Users are recommended to apply a preparatory function called \code{tsSynth.prep} that allows the user to easily create all inputs required for \code{tsSynth.meth}. After extracting the required matrices, it is advisable to run \code{tsSynth.test} to determine which model is the most appropriate for the corresponding treatment and controls.
}
\examples{
  ##In order to run tsSynth.meth() properly, we recommend users to run
  ##tsSynth.prep for components extraction first.

  #load data from the package.
  data(synth.data)

  #extract relevant components necessary for running tsSynth.meth()
  #from wide-format panel data.
  tsSynth.prep.out =
    tsSynth.prep(
     data = synth.data,
     treatment.identifier = 9,
     controls.identifier = c(2:8),
     time.variable = 1,
     time.prior = c(1984:1989),
     time.post = c(1990:1998)
     )

  #then run tsSynth.test() to determine the appropriate method based
  #on the testing result.
  tsSynth.test.out =
    tsSynth.test(tsSynth.prep.out, m = 4)

  #the testing result indicates that original SC model is the most
  #appropriate.
  #now run tsSynth.meth function to apply original SC model
  #to identify the optimized weights
  tsSynth.meth.out =
    tsSynth.meth(
     tsSynth.prep.out,
     meth = "SC"
     )

  #or users can choose MSCa model (with weights sum to one).
  tsSynth.meth.out2 =
    tsSynth.meth(
     tsSynth.prep.out,
     meth = "MSCa"
     )

  #or apply MSCb model (with zero intercept).
  tsSynth.meth.out3 =
    tsSynth.meth(
     tsSynth.prep.out,
     meth = "MSCb"
     )

  #or apply MSC model (with non-negativity).
  tsSynth.meth.out4 =
    tsSynth.meth(
     tsSynth.prep.out,
     meth = "MSC",
     )
}
\references{
Li K, Shankar V (2020) Estimating the causal effect of a digitally native retailer opening a new store: a new two-step synthetic control method. Working Paper, University of Texas at Austin, Austin, TX.

  Li K (2019) Statistical inference for average treatment effects estimated by synthetic control methods. \emph{Journal of American Statistical Association}.
}
